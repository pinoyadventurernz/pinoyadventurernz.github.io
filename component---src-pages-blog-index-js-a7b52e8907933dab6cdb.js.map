{"version":3,"sources":["webpack:///./src/pages/blog/index.js","webpack:///./src/components/BlogRoll.js"],"names":["BlogIndexPage","render","className","style","backgroundImage","boxShadow","backgroundColor","color","padding","React","Component","BlogRoll","posts","this","props","data","allMarkdownRemark","edges","map","post","node","key","id","frontmatter","featuredpost","featuredimage","imageInfo","image","alt","title","to","fields","slug","date","excerpt","query","count"],"mappings":"uMAKqBA,E,kGACnBC,OAAA,WACE,OACE,kBAAC,IAAD,KACE,yBACEC,UAAU,0CACVC,MAAO,CACLC,gBAAgB,+BAGlB,wBACEF,UAAU,iCACVC,MAAO,CACLE,UAAW,oCACXC,gBAAiB,OACjBC,MAAO,QACPC,QAAS,SANb,mBAYF,6BAASN,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,W,GAzB6BO,IAAMC,Y,iGCA3CC,E,kGACJV,OAAA,WAAU,IAEOW,EADEC,KAAKC,MAAdC,KACsBC,kBAAtBC,MAER,OACE,yBAAKf,UAAU,wBACZU,GACCA,EAAMM,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACR,yBAAKlB,UAAU,wBAAwBmB,IAAKF,EAAKG,IAC/C,6BACEpB,UAAS,kDACPiB,EAAKI,YAAYC,aAAe,cAAgB,KAGlD,gCACGL,EAAKI,YAAYE,cAChB,yBAAKvB,UAAU,sBACb,kBAAC,IAAD,CACEwB,UAAW,CACTC,MAAOR,EAAKI,YAAYE,cACxBG,IAAI,qCAAsCT,EAAKI,YAAYM,UAI/D,KACJ,uBAAG3B,UAAU,aACX,kBAAC,IAAD,CACEA,UAAU,mCACV4B,GAAIX,EAAKY,OAAOC,MAEfb,EAAKI,YAAYM,OAEpB,qCACA,0BAAM3B,UAAU,+BACbiB,EAAKI,YAAYU,QAIxB,2BACGd,EAAKe,QACN,6BACA,6BACA,kBAAC,IAAD,CAAMhC,UAAU,SAAS4B,GAAIX,EAAKY,OAAOC,MAAzC,0B,GA3CKvB,IAAMC,WA+Dd,sBACb,kBAAC,IAAD,CACEyB,MAAK,aA+BLlC,OAAQ,SAACc,EAAMqB,GAAP,OAAiB,kBAACzB,EAAD,CAAUI,KAAMA,EAAMqB,MAAOA","file":"component---src-pages-blog-index-js-a7b52e8907933dab6cdb.js","sourcesContent":["import React from 'react'\r\n\r\nimport Layout from '../../components/Layout'\r\nimport BlogRoll from '../../components/BlogRoll'\r\n\r\nexport default class BlogIndexPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div\r\n          className=\"full-width-image-container margin-top-0\"\r\n          style={{\r\n            backgroundImage: `url('/img/blog-index.jpg')`,\r\n          }}\r\n        >\r\n          <h1\r\n            className=\"has-text-weight-bold is-size-1\"\r\n            style={{\r\n              boxShadow: '0.5rem 0 0 #f40, -0.5rem 0 0 #f40',\r\n              backgroundColor: '#f40',\r\n              color: 'white',\r\n              padding: '1rem',\r\n            }}\r\n          >\r\n            Latest Stories\r\n          </h1>\r\n        </div>\r\n        <section className=\"section\">\r\n          <div className=\"container\">\r\n            <div className=\"content\">\r\n              <BlogRoll />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, graphql, StaticQuery } from 'gatsby'\r\nimport PreviewCompatibleImage from './PreviewCompatibleImage'\r\n\r\nclass BlogRoll extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const { edges: posts } = data.allMarkdownRemark\r\n\r\n    return (\r\n      <div className=\"columns is-multiline\">\r\n        {posts &&\r\n          posts.map(({ node: post }) => (\r\n            <div className=\"is-parent column is-6\" key={post.id}>\r\n              <article\r\n                className={`blog-list-item tile is-child box notification ${\r\n                  post.frontmatter.featuredpost ? 'is-featured' : ''\r\n                }`}\r\n              >\r\n                <header>\r\n                  {post.frontmatter.featuredimage ? (\r\n                    <div className=\"featured-thumbnail\">\r\n                      <PreviewCompatibleImage\r\n                        imageInfo={{\r\n                          image: post.frontmatter.featuredimage,\r\n                          alt: `featured image thumbnail for post ${post.frontmatter.title}`,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  ) : null}\r\n                  <p className=\"post-meta\">\r\n                    <Link\r\n                      className=\"title has-text-primary is-size-4\"\r\n                      to={post.fields.slug}\r\n                    >\r\n                      {post.frontmatter.title}\r\n                    </Link>\r\n                    <span> &bull; </span>\r\n                    <span className=\"subtitle is-size-5 is-block\">\r\n                      {post.frontmatter.date}\r\n                    </span>\r\n                  </p>\r\n                </header>\r\n                <p>\r\n                  {post.excerpt}\r\n                  <br />\r\n                  <br />\r\n                  <Link className=\"button\" to={post.fields.slug}>\r\n                    Keep Reading â†’\r\n                  </Link>\r\n                </p>\r\n              </article>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nBlogRoll.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.array,\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query BlogRollQuery {\r\n        allMarkdownRemark(\r\n          sort: { order: DESC, fields: [frontmatter___date] }\r\n          filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\r\n        ) {\r\n          edges {\r\n            node {\r\n              excerpt(pruneLength: 400)\r\n              id\r\n              fields {\r\n                slug\r\n              }\r\n              frontmatter {\r\n                title\r\n                templateKey\r\n                date(formatString: \"MMMM DD, YYYY\")\r\n                featuredpost\r\n                featuredimage {\r\n                  childImageSharp {\r\n                    fluid(maxWidth: 120, quality: 100) {\r\n                      ...GatsbyImageSharpFluid\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={(data, count) => <BlogRoll data={data} count={count} />}\r\n  />\r\n)\r\n"],"sourceRoot":""}